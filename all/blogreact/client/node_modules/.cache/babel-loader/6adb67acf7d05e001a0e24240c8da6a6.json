{"ast":null,"code":"const express = require(\"express\");\n\nconst app = express();\n\nconst dotenv = require(\"dotenv\");\n\nconst mongoose = require(\"mongoose\");\n\nconst authRoute = require(\"./routes/auth\");\n\nconst userRoute = require(\"./routes/users\");\n\nconst postRoute = require(\"./routes/posts\");\n\nconst categoryRoute = require(\"./routes/categories\");\n\nconst multer = require(\"multer\");\n\nconst path = require(\"path\");\n\ndotenv.config();\napp.use(express.json());\napp.use(\"/images\", express.static(path.join(__dirname, \"/images\")));\nmongoose.connect(process.env.MONGO_URL, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: true\n}).then(console.log(\"Connected to MongoDB\")).catch(err => console.log(err));\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    cb(null, \"images\");\n  },\n  filename: (req, file, cb) => {\n    cb(null, req.body.name);\n  }\n});\nconst upload = multer({\n  storage: storage\n});\napp.post(\"/api/upload\", upload.single(\"file\"), (req, res) => {\n  res.status(200).json(\"File has been uploaded\");\n});\napp.use(\"/api/auth\", authRoute);\napp.use(\"/api/users\", userRoute);\napp.use(\"/api/posts\", postRoute);\napp.use(\"/api/categories\", categoryRoute);\napp.listen(\"5002\", () => {\n  console.log(\"Backend is running.\");\n});\n/*import \"./write.css\";\nimport { useState, useContext } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport axios from \"axios\";\n\nexport default function Write() {\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const { user } = useContext(Context);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newPost = {\n      title,\n      desc,\n      username: user.username,\n    };\n\n    if (file) {\n      const data = new FormData();\n      const filename = Date.now() + file.name;\n      data.append(\"name\", filename);\n      data.append(\"file\", file);\n      newPost.photo = filename;\n      try {\n        await axios.post(\"/upload\", data);\n      } catch (err) {}\n      try {\n        const res = await axios.post(\"/posts\", newPost);\n        window.location.replace(\"/post/\" + res.data._id);\n      } catch (err) {}\n    }\n  };\n  return (\n    <div className=\"write\">\n      {file && (\n        <img className=\"writeImg\" src={URL.createObjectURL(file)} alt=\"\" />\n      )}\n\n      <form className=\"writeForm\" onSubmit={handleSubmit}>\n        <div className=\"writeFormGroup\">\n          <label htmlFor=\"fileInput\">\n            <i className=\"writeIcon fas fa-plus\"></i>\n          </label>\n          <input\n            id=\"fileInput\"\n            type=\"file\"\n            style={{ display: \"none\" }}\n            onChange={(e) => setFile(e.target.files[0])}\n          />\n          <input\n            className=\"writeInput\"\n            placeholder=\"Title\"\n            type=\"text\"\n            autoFocus={true}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </div>\n        <div className=\"writeFormGroup\">\n          <textarea\n            className=\"writeInput writeText\"\n            placeholder=\"Tell your story...\"\n            type=\"text\"\n            autoFocus={true}\n            onChange={(e) => setDesc(e.target.value)}\n          />\n        </div>\n        <button className=\"writeSubmit\" type=\"submit\">\n          Publish\n        </button>\n      </form>\n    </div>\n  );\n}*/","map":{"version":3,"names":["express","require","app","dotenv","mongoose","authRoute","userRoute","postRoute","categoryRoute","multer","path","config","use","json","static","join","__dirname","connect","process","env","MONGO_URL","useNewUrlParser","useUnifiedTopology","useCreateIndex","useFindAndModify","then","console","log","catch","err","storage","diskStorage","destination","req","file","cb","filename","body","name","upload","post","single","res","status","listen"],"sources":["/Users/khaliddahir/Desktop/blogreact/client/src/pages/write/Write.jsx"],"sourcesContent":["const express = require(\"express\");\nconst app = express();\nconst dotenv = require(\"dotenv\");\nconst mongoose = require(\"mongoose\");\nconst authRoute = require(\"./routes/auth\");\nconst userRoute = require(\"./routes/users\");\nconst postRoute = require(\"./routes/posts\");\nconst categoryRoute = require(\"./routes/categories\");\nconst multer = require(\"multer\");\nconst path = require(\"path\");\n\ndotenv.config();\napp.use(express.json());\napp.use(\"/images\", express.static(path.join(__dirname, \"/images\")));\n\nmongoose\n  .connect(process.env.MONGO_URL, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    useCreateIndex: true,\n    useFindAndModify:true\n  })\n  .then(console.log(\"Connected to MongoDB\"))\n  .catch((err) => console.log(err));\n\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    cb(null, \"images\");\n  },\n  filename: (req, file, cb) => {\n    cb(null, req.body.name);\n  },\n});\n\nconst upload = multer({ storage: storage });\napp.post(\"/api/upload\", upload.single(\"file\"), (req, res) => {\n  res.status(200).json(\"File has been uploaded\");\n});\n\napp.use(\"/api/auth\", authRoute);\napp.use(\"/api/users\", userRoute);\napp.use(\"/api/posts\", postRoute);\napp.use(\"/api/categories\", categoryRoute);\n\napp.listen(\"5002\", () => {\n  console.log(\"Backend is running.\");\n});\n\n\n/*import \"./write.css\";\nimport { useState, useContext } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport axios from \"axios\";\n\nexport default function Write() {\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const { user } = useContext(Context);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newPost = {\n      title,\n      desc,\n      username: user.username,\n    };\n\n    if (file) {\n      const data = new FormData();\n      const filename = Date.now() + file.name;\n      data.append(\"name\", filename);\n      data.append(\"file\", file);\n      newPost.photo = filename;\n      try {\n        await axios.post(\"/upload\", data);\n      } catch (err) {}\n      try {\n        const res = await axios.post(\"/posts\", newPost);\n        window.location.replace(\"/post/\" + res.data._id);\n      } catch (err) {}\n    }\n  };\n  return (\n    <div className=\"write\">\n      {file && (\n        <img className=\"writeImg\" src={URL.createObjectURL(file)} alt=\"\" />\n      )}\n\n      <form className=\"writeForm\" onSubmit={handleSubmit}>\n        <div className=\"writeFormGroup\">\n          <label htmlFor=\"fileInput\">\n            <i className=\"writeIcon fas fa-plus\"></i>\n          </label>\n          <input\n            id=\"fileInput\"\n            type=\"file\"\n            style={{ display: \"none\" }}\n            onChange={(e) => setFile(e.target.files[0])}\n          />\n          <input\n            className=\"writeInput\"\n            placeholder=\"Title\"\n            type=\"text\"\n            autoFocus={true}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </div>\n        <div className=\"writeFormGroup\">\n          <textarea\n            className=\"writeInput writeText\"\n            placeholder=\"Tell your story...\"\n            type=\"text\"\n            autoFocus={true}\n            onChange={(e) => setDesc(e.target.value)}\n          />\n        </div>\n        <button className=\"writeSubmit\" type=\"submit\">\n          Publish\n        </button>\n      </form>\n    </div>\n  );\n}*/\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,MAAMG,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMI,SAAS,GAAGJ,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAMK,SAAS,GAAGL,OAAO,CAAC,gBAAD,CAAzB;;AACA,MAAMM,SAAS,GAAGN,OAAO,CAAC,gBAAD,CAAzB;;AACA,MAAMO,aAAa,GAAGP,OAAO,CAAC,qBAAD,CAA7B;;AACA,MAAMQ,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMS,IAAI,GAAGT,OAAO,CAAC,MAAD,CAApB;;AAEAE,MAAM,CAACQ,MAAP;AACAT,GAAG,CAACU,GAAJ,CAAQZ,OAAO,CAACa,IAAR,EAAR;AACAX,GAAG,CAACU,GAAJ,CAAQ,SAAR,EAAmBZ,OAAO,CAACc,MAAR,CAAeJ,IAAI,CAACK,IAAL,CAAUC,SAAV,EAAqB,SAArB,CAAf,CAAnB;AAEAZ,QAAQ,CACLa,OADH,CACWC,OAAO,CAACC,GAAR,CAAYC,SADvB,EACkC;EAC9BC,eAAe,EAAE,IADa;EAE9BC,kBAAkB,EAAE,IAFU;EAG9BC,cAAc,EAAE,IAHc;EAI9BC,gBAAgB,EAAC;AAJa,CADlC,EAOGC,IAPH,CAOQC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAPR,EAQGC,KARH,CAQUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CARlB;AAUA,MAAMC,OAAO,GAAGrB,MAAM,CAACsB,WAAP,CAAmB;EACjCC,WAAW,EAAE,CAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,KAAmB;IAC9BA,EAAE,CAAC,IAAD,EAAO,QAAP,CAAF;EACD,CAHgC;EAIjCC,QAAQ,EAAE,CAACH,GAAD,EAAMC,IAAN,EAAYC,EAAZ,KAAmB;IAC3BA,EAAE,CAAC,IAAD,EAAOF,GAAG,CAACI,IAAJ,CAASC,IAAhB,CAAF;EACD;AANgC,CAAnB,CAAhB;AASA,MAAMC,MAAM,GAAG9B,MAAM,CAAC;EAAEqB,OAAO,EAAEA;AAAX,CAAD,CAArB;AACA5B,GAAG,CAACsC,IAAJ,CAAS,aAAT,EAAwBD,MAAM,CAACE,MAAP,CAAc,MAAd,CAAxB,EAA+C,CAACR,GAAD,EAAMS,GAAN,KAAc;EAC3DA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgB9B,IAAhB,CAAqB,wBAArB;AACD,CAFD;AAIAX,GAAG,CAACU,GAAJ,CAAQ,WAAR,EAAqBP,SAArB;AACAH,GAAG,CAACU,GAAJ,CAAQ,YAAR,EAAsBN,SAAtB;AACAJ,GAAG,CAACU,GAAJ,CAAQ,YAAR,EAAsBL,SAAtB;AACAL,GAAG,CAACU,GAAJ,CAAQ,iBAAR,EAA2BJ,aAA3B;AAEAN,GAAG,CAAC0C,MAAJ,CAAW,MAAX,EAAmB,MAAM;EACvBlB,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}